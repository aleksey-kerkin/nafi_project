# Generated by Django 5.0.6 on 2024-06-05 13:42

import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email адрес')),
                ('name', models.CharField(max_length=255, verbose_name='Имя пользователя')),
                ('middlename', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('lastname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Номер телефона')),
                ('position', models.CharField(blank=True, max_length=127, null=True, verbose_name='Должность')),
                ('entity', models.CharField(choices=[('LP', 'Юридическое лицо'), ('NP', 'Физическое лицо')], default='NP', max_length=17, verbose_name='Физ./Юр. лицо')),
                ('organization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Организация')),
                ('business_area', models.CharField(default='Безработный', max_length=255, verbose_name='Сфера деятельности')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
